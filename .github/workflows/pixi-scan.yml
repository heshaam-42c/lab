name: PixiTokenScan

on: push
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      pixi_token_encrypted: ${{ steps.get_token.outputs.pixi_token_encrypted }}
    steps:
    - id: get_token
      run: | 
        response=$(curl -k -d "user=656@acme.com&pass=hellopixi" -X POST https://photo-demo.westeurope.cloudapp.azure.com/hesh/api/user/login | jq -r '.token')
        echo "::add-mask::$response"
        pixi_token_encrypted=$(gpg --symmetric --batch --passphrase "$SECRET" --output - <(echo "$response") | base64 -w0)
        echo "pixi_token_encrypted=$pixi_token_encrypted" >> $GITHUB_OUTPUT

        echo "encrypted response from curl= $pixi_token_encrypted"

        #echo ${{steps.get_token.outputs.pixi_token_encrypted}}
        
      env:
          SECRET: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}
        
  job2:
    runs-on: ubuntu-latest
    # Wait from the job1 to be completed before starting job2
    needs: job1
    steps:
    - id: run_42c_scan
      run: |
        token=${{needs.job1.outputs.get_token}}
        echo $token
        pixi_token=$(gpg --decrypt --quiet --batch --passphrase "$SECRET" --output - <(echo "$token" | base64 --decode))
        echo "::add-mask::$pixi_token"
        echo "pixi_token=$pixi_token" >> $GITHUB_OUTPUT

        echo "decrypted response from curl= $pixi_token"
      env:
        SECRET: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}